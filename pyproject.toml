[project]
name = "torch_foo"
version = "0.1.0"
description = "Example of a backend extension for torch using the scikit-build-core build backend."
requires-python = ">=3.8"
readme = "python/torch_foo/README.md"
dependencies = []

[project.optional-dependencies]
test = ["pytest"]

[project.entry-points."torch.backends"]
torch_foo = "torch_foo:_autoload"     # tell PyTorch to autoload this module

[build-system]
requires = ["scikit-build-core", "torch", "numpy", "wheel"]
build-backend = "scikit_build_core.build"

[tool.scikit-build]
build.verbose = true
cmake.version = "CMakeLists.txt"      # Read from the root CMakeLists.txt for minimum version
build-dir = "build"                   # Set our build directory to the canonical path
editable.rebuild = true               # Enable editable mode and rebuild
wheel.packages = ["python/torch_foo"] # Will copy the contents of the package directory to the wheel for each package listed

[tool.scikit-build.cmake.define]
FOO_WITH_PYTHON = "ON"                # Tell the CMake build system to build our python extension.'
FOO_WITH_TESTS = "ON"                 # Run all our tests, probably should only test the python bits from the pyproject. TODO.

[tool.uv]
cache-dir = ".uv-cache"

[tool.uv.pip]
no-build-isolation = true
